
CUDA availability: True
Traceback (most recent call last):
  File "main.py", line 89, in <module>
    main()
  File "main.py", line 85, in main
    model_trained = train(dataset, config,  device)
  File "main.py", line 48, in train
    loss, timing_loss, choice_loss  = model(arr_b.float(), arr_c.float(), arr_delta_time.float(), event_data, non_event_data, estimate_length, choice_data_dict)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 195, in forward
    event_choice_loss = self.choice_net(mat_b, mat_c, choice_data_dict, self.s_year, self.e_year)*1000
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 355, in forward
    choice_l = F.binary_cross_entropy(torch.sigmoid(logits_i), true_tar_idxs_i)  # inputs are both (N_i_2, N_i_1)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/functional.py", line 2759, in binary_cross_entropy
    return torch._C._nn.binary_cross_entropy(input, target, weight, reduction_enum)
RuntimeError: all elements of input should be between 0 and 1
### arr_b_idx_i tensor(1)
tensor([[[[ 0.1817, -0.4215,  0.0931, -0.0413, -0.1456,  0.1798, -0.2267,
            0.1432,  0.0410,  0.1066,  0.0110, -0.2081,  0.2239,  0.0369,
           -0.1626, -0.2330,  0.0221, -0.1241,  0.0436,  0.2957, -0.1225,
            0.2306, -0.0816,  0.2422,  0.0135,  0.2097, -0.0376,  0.0116,
            0.0217,  0.3200,  0.0375, -0.0766]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(2)
tensor([[[[ 0.1329, -0.4382, -0.0538, -0.1668,  0.0276,  0.1933, -0.1161,
            0.1110,  0.0270, -0.0116,  0.0313, -0.2245,  0.0823,  0.1656,
           -0.0904, -0.1464,  0.1754,  0.0007,  0.1327,  0.2494, -0.1294,
            0.2239, -0.0029,  0.1981, -0.0193,  0.2795,  0.1567,  0.0957,
           -0.1772,  0.1380, -0.1096, -0.0219]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(9)
tensor([[[[ 0.2358, -0.4082,  0.0643, -0.0265,  0.0486,  0.0679, -0.1156,
            0.1707, -0.0425,  0.0591, -0.0162, -0.2161,  0.1586,  0.0347,
           -0.1942, -0.2180,  0.0489, -0.1169,  0.0462,  0.2200, -0.0584,
            0.1093, -0.1482,  0.1620,  0.0500,  0.1544,  0.0578,  0.0547,
           -0.0451,  0.1563,  0.0251, -0.0234]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(15)
tensor([[[[ 0.1480, -0.2205,  0.0472, -0.0659, -0.0367,  0.1400, -0.1030,
            0.1169, -0.1613,  0.0052,  0.0365, -0.3035,  0.0878, -0.0438,
           -0.2319, -0.1819, -0.0369, -0.0513,  0.0994,  0.0745, -0.0533,
           -0.0845, -0.2433,  0.1764, -0.0036,  0.3029, -0.0022,  0.1244,
           -0.1509,  0.2662, -0.0207,  0.0084]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(19)
tensor([[[[ 0.2162, -0.3331, -0.0312, -0.1364,  0.0420,  0.2066, -0.0467,
            0.2450, -0.0344,  0.2093, -0.0605, -0.3604,  0.0136,  0.1466,
           -0.2753, -0.1833,  0.0371, -0.1233,  0.0302,  0.0866, -0.1408,
            0.1526, -0.1014,  0.2689,  0.0583,  0.2167,  0.0789, -0.0579,
           -0.0633,  0.0796,  0.0867,  0.2009]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(1)
tensor([[[[ 0.1338, -0.2051,  0.0464, -0.0136, -0.0704,  0.2256, -0.0266,
           -0.0150, -0.1063,  0.0750, -0.2388, -0.1557,  0.1140,  0.1216,
           -0.0866, -0.2027, -0.1105, -0.1631, -0.0468,  0.0645,  0.1350,
            0.1136, -0.0053,  0.1112,  0.0862,  0.2136,  0.0455,  0.0844,
            0.0173,  0.0184, -0.0282,  0.1486]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(5)
tensor([[[[ 0.1046, -0.3515,  0.0310,  0.0313, -0.1210,  0.2488, -0.0041,
            0.1149, -0.2241,  0.1333, -0.3453, -0.3579,  0.0577,  0.1141,
           -0.2335, -0.3130, -0.2124, -0.1042, -0.1414, -0.0678,  0.0282,
           -0.0131, -0.1331,  0.2144,  0.0944,  0.3118,  0.0365, -0.0333,
           -0.0891,  0.0033, -0.1213,  0.3109]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(15)
tensor([[[[ 0.0614, -0.1689,  0.1348, -0.0879, -0.0053,  0.3767,  0.1720,
            0.0058, -0.2774, -0.0676, -0.1875, -0.3367,  0.0576,  0.1835,
           -0.0286, -0.1731, -0.0318, -0.1312,  0.0614, -0.0523,  0.1726,
           -0.0344, -0.0911,  0.0943,  0.1472,  0.2035,  0.0267,  0.0327,
           -0.0859,  0.1010, -0.0845,  0.3486]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor([16, 16])
tensor([[[[ 0.1483, -0.2508,  0.0467,  0.1096, -0.1424,  0.2400,  0.0191,
            0.0625, -0.2473,  0.0700, -0.3153, -0.2065,  0.1105,  0.0537,
           -0.1047, -0.2375, -0.2639, -0.1409, -0.1266, -0.0209,  0.1449,
           -0.1418, -0.1299,  0.1813,  0.0373,  0.2736, -0.0696, -0.0514,
           -0.0634,  0.1185, -0.1211,  0.2764]],
         [[ 0.0079, -0.4776,  0.1765,  0.0566, -0.1192,  0.3972,  0.0127,
            0.0597, -0.2199, -0.0060, -0.2141, -0.0943,  0.1903, -0.0459,
           -0.1303, -0.1789, -0.2040, -0.1251, -0.0605, -0.0490, -0.0886,
           -0.1304, -0.0918,  0.1866,  0.1394,  0.1068, -0.2823, -0.1784,
            0.0252,  0.3469, -0.1777,  0.2723]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(17)
tensor([[[[ 0.0824, -0.2554,  0.0084, -0.0760, -0.0106,  0.2984,  0.0999,
            0.1188, -0.4194,  0.0499, -0.2749, -0.1829, -0.0080,  0.1330,
           -0.1749, -0.2110, -0.1522, -0.1604,  0.1024, -0.1239,  0.0789,
           -0.1051, -0.2457,  0.1584,  0.1403,  0.2489, -0.1197, -0.0026,
           -0.1832,  0.0848, -0.2017,  0.4218]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(20)
tensor([[[[ 0.1417, -0.2282,  0.0795,  0.0658, -0.1230,  0.2596, -0.0300,
            0.0987, -0.3026,  0.0667, -0.2224, -0.0975,  0.0960,  0.0419,
           -0.1634, -0.2116, -0.2609, -0.1017, -0.0448, -0.0959,  0.1327,
           -0.0893, -0.0955,  0.1697,  0.0796,  0.1806, -0.0922, -0.0931,
           -0.0012,  0.0604, -0.0197,  0.3087]]]],
       grad_fn=<UnsqueezeBackward0>)
### arr_b_idx_i tensor(1)
tensor([[[[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
           nan, nan, nan, nan, nan, nan, nan, nan, nan]]]],
       grad_fn=<UnsqueezeBackward0>)