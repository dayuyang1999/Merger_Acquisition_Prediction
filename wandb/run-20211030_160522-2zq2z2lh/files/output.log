
CUDA availability: True
### event lambdas:  tensor([[3.7245, 5.8061, 2.4145, 7.3396]], grad_fn=<MulBackward0>)
### non event lambdas:  tensor([[25.2992,     inf,     inf, 15.9689, 23.1002,  5.1137,     inf,     inf,
             inf,  6.0414, 21.2809,     inf,     inf,     inf, 17.7966, 26.5067,
         18.3905,     inf,     inf,     inf,     inf, 11.6610,     inf, 24.3164,
             inf,     inf,     inf,     inf, 24.8314, 15.7285,  4.3859,     inf,
             inf,     inf,     inf, 13.0910,     inf,     inf,     inf,     inf]],
       grad_fn=<MulBackward0>)
Epoch 0. Total Loss: inf. Timing MLE loss: inf. Choice BCE loss 2.1660
### event lambdas:  tensor([[nan, nan, nan, nan]], grad_fn=<MulBackward0>)
### non event lambdas:  tensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]],
       grad_fn=<MulBackward0>)
Traceback (most recent call last):
  File "main.py", line 89, in <module>
    main()
  File "main.py", line 85, in main
    model_trained = train(dataset, config,  device)
  File "main.py", line 48, in train
    loss, timing_loss, choice_loss  = model(arr_b.float(), arr_c.float(), arr_delta_time.float(), event_data, non_event_data, estimate_length, choice_data_dict)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 195, in forward
    event_choice_loss = self.choice_net(mat_b, mat_c, choice_data_dict, self.s_year, self.e_year)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 347, in forward
    choice_l = self.loss(torch.sigmoid(logits_i), true_tar_idxs_i)  # inputs are both (N_i_2, N_i_1)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/loss.py", line 613, in forward
    return F.binary_cross_entropy(input, target, weight=self.weight, reduction=self.reduction)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/functional.py", line 2759, in binary_cross_entropy
    return torch._C._nn.binary_cross_entropy(input, target, weight, reduction_enum)
RuntimeError: all elements of input should be between 0 and 1