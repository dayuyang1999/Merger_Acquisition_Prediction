Traceback (most recent call last):
  File "main.py", line 88, in <module>
    main()
  File "main.py", line 84, in main
    model_trained = train(dataset, config,  device)
  File "main.py", line 48, in train
    loss, timing_loss, choice_loss  = model(arr_b.float(), arr_c.float(), arr_delta_time.float(), event_data, non_event_data, estimate_length, choice_data_dict)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 180, in forward
    event_lambda = self.timing_net(mat_b, mat_c, event_data) # (L3, )
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 233, in forward
    c = torch.index_select(mat_c, 1, arr_c_idx[0]) # (L3, embedding_c)
TypeError: index_select() received an invalid combination of arguments - got (tuple, int, Tensor), but expected one of:
 * (Tensor input, name dim, Tensor index, *, Tensor out)
 * (Tensor input, int dim, Tensor index, *, Tensor out)
CUDA availability: True
tensor([ 0,  2,  2, 12])
tensor([[ 0,  2,  2, 12]])