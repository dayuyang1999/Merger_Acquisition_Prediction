Traceback (most recent call last):
  File "main.py", line 88, in <module>
    main()
  File "main.py", line 84, in main
    model_trained = train(dataset, config,  device)
  File "main.py", line 48, in train
    loss, timing_loss, choice_loss  = model(arr_b.float(), arr_c.float(), arr_delta_time.float(), event_data, non_event_data, estimate_length, choice_data_dict)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 189, in forward
    event_choice_loss = self.choice_net(mat_b, mat_c, choice_data_dict, self.s_year, self.e_year)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 308, in forward
    z_dt = self.transform(torch.cat((torch.index_select(mat_b, 1, arr_b_idx_i[0]), torch.index_select(mat_c, 1, arr_c_idx_i[0])), dim=1))  # z_dt : (N_i_2, embedding_b + embedding_c)
RuntimeError: Sizes of tensors must match except in dimension 1. Got 32 and 16 in dimension 2 (The offending index is 1)
CUDA availability: True
1997
1998
1999
2000