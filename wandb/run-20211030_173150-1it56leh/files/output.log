
CUDA availability: True
### b: tensor([[[ 13212.3418,  11588.3652,  -4219.4385, -21840.5840, -33122.5547,
             321.0067,  18392.1660, -11975.7070,  -6757.1855, -19293.5859,
            4102.3452, -38491.1914,   9351.4180,  21369.8086,  -6725.6987,
           -3717.8740,  -3738.3066,  13370.2285,  53675.8516,  21899.3535,
          -33869.5547,   6882.9409, -26591.7051, -25117.8711,   1602.3279,
           14202.0342,  -8831.8809,  45346.2266,  10812.5166,  -6632.4478,
           20034.3184,  47853.5547],
         [ 13212.3418,  11588.3652,  -4219.4385, -21840.5840, -33122.5547,
             321.0067,  18392.1660, -11975.7070,  -6757.1855, -19293.5859,
            4102.3452, -38491.1914,   9351.4180,  21369.8086,  -6725.6987,
           -3717.8740,  -3738.3066,  13370.2285,  53675.8516,  21899.3535,
          -33869.5547,   6882.9409, -26591.7051, -25117.8711,   1602.3279,
           14202.0342,  -8831.8809,  45346.2266,  10812.5166,  -6632.4478,
           20034.3184,  47853.5547],
         [  9700.2393,  19699.6211,   4308.7183, -10331.9189, -18396.4648,
           -3959.8364,  15193.1406,   -719.5873, -25581.0254, -21646.5156,
           18243.8242, -20871.8770,   -613.3749,  29428.8516,   2848.4048,
           14793.5469, -20655.0449,  17427.4473, 103683.3516,  18960.1914,
            3352.0906, -10092.6934,  -6241.4009, -49024.4023, -21865.8691,
           11047.2852,   8124.2539,  43028.5938,   1128.1112,  -5002.6377,
           15102.1289,  36973.9102],
         [  9700.2393,  19699.6211,   4308.7183, -10331.9189, -18396.4648,
           -3959.8364,  15193.1406,   -719.5873, -25581.0254, -21646.5156,
           18243.8242, -20871.8770,   -613.3749,  29428.8516,   2848.4048,
           14793.5469, -20655.0449,  17427.4473, 103683.3516,  18960.1914,
            3352.0906, -10092.6934,  -6241.4009, -49024.4023, -21865.8691,
           11047.2852,   8124.2539,  43028.5938,   1128.1112,  -5002.6377,
           15102.1289,  36973.9102]]], grad_fn=<IndexSelectBackward>)
### b: tensor([[[  9700.2393,  19699.6211,   4308.7183,  ...,  -5002.6377,
           15102.1289,  36973.9102],
         [ 13212.3418,  11588.3652,  -4219.4385,  ...,  -6632.4478,
           20034.3184,  47853.5547],
         [ 13212.3418,  11588.3652,  -4219.4385,  ...,  -6632.4478,
           20034.3184,  47853.5547],
         ...,
         [ 13212.3418,  11588.3652,  -4219.4385,  ...,  -6632.4478,
           20034.3184,  47853.5547],
         [  -335.6750,  26110.5430, -12165.7168,  ...,  -1644.3228,
           37158.6445,  62502.1406],
         [  9700.2393,  19699.6211,   4308.7183,  ...,  -5002.6377,
           15102.1289,  36973.9102]]], grad_fn=<IndexSelectBackward>)
tensor([[[ 12602.5693,  20585.5566,   -615.2858, -15586.5186, -34782.1562,
          -16954.9434,  10978.0342,  -7221.9688, -38510.4805,  -7409.6572,
           14686.6104, -24072.8125, -16883.9785,  38823.4688,   9104.9912,
          -32672.8320, -15264.4736,  15301.7832,  72550.4609,  25524.8516,
           -2284.2334,  11115.5508,  17850.4473, -24942.4375,  15567.2627,
           -1352.4663,  18885.8887,  22384.9219,   4119.7271,  -5587.7485,
           21373.7676,  43923.7031],
         [ 13212.3418,  11588.3652,  -4219.4385, -21840.5840, -33122.5547,
             321.0067,  18392.1660, -11975.7070,  -6757.1855, -19293.5859,
            4102.3452, -38491.1914,   9351.4180,  21369.8086,  -6725.6987,
           -3717.8740,  -3738.3066,  13370.2285,  53675.8516,  21899.3535,
          -33869.5547,   6882.9409, -26591.7051, -25117.8711,   1602.3279,
           14202.0342,  -8831.8809,  45346.2266,  10812.5166,  -6632.4478,
           20034.3184,  47853.5547],
         [  9700.2393,  19699.6211,   4308.7183, -10331.9189, -18396.4648,
           -3959.8364,  15193.1406,   -719.5873, -25581.0254, -21646.5156,
           18243.8242, -20871.8770,   -613.3749,  29428.8516,   2848.4048,
           14793.5469, -20655.0449,  17427.4473, 103683.3516,  18960.1914,
            3352.0906, -10092.6934,  -6241.4009, -49024.4023, -21865.8691,
           11047.2852,   8124.2539,  43028.5938,   1128.1112,  -5002.6377,
           15102.1289,  36973.9102],
         [  -335.6750,  26110.5430, -12165.7168, -30832.6816, -27168.4590,
            -819.4692,  39876.8164,  15168.1631,    580.7433, -38118.0586,
            2300.4758, -11136.9131,   1757.2905,  36699.8711, -14142.8975,
           10851.8145,  -3470.3494,  10684.2744, 102233.7891,  67385.9766,
          -36979.7773,   2593.4714, -16269.5947, -20040.5098, -26361.3340,
           31775.8262,  12068.9570,  41030.6211,  14284.7461,  -1644.3228,
           37158.6445,  62502.1406]]], grad_fn=<AddBackward0>)
tensor([[[ 12602.5693,  20585.5566,   -615.2858, -15586.5186, -34782.1562,
          -16954.9434,  10978.0342,  -7221.9688, -38510.4805,  -7409.6572,
           14686.6104, -24072.8125, -16883.9785,  38823.4688,   9104.9912,
          -32672.8320, -15264.4736,  15301.7832,  72550.4609,  25524.8516,
           -2284.2334,  11115.5508,  17850.4473, -24942.4375,  15567.2627,
           -1352.4663,  18885.8887,  22384.9219,   4119.7271,  -5587.7485,
           21373.7676,  43923.7031],
         [ 13212.3418,  11588.3652,  -4219.4385, -21840.5840, -33122.5547,
             321.0067,  18392.1660, -11975.7070,  -6757.1855, -19293.5859,
            4102.3452, -38491.1914,   9351.4180,  21369.8086,  -6725.6987,
           -3717.8740,  -3738.3066,  13370.2285,  53675.8516,  21899.3535,
          -33869.5547,   6882.9409, -26591.7051, -25117.8711,   1602.3279,
           14202.0342,  -8831.8809,  45346.2266,  10812.5166,  -6632.4478,
           20034.3184,  47853.5547],
         [  9700.2393,  19699.6211,   4308.7183, -10331.9189, -18396.4648,
           -3959.8364,  15193.1406,   -719.5873, -25581.0254, -21646.5156,
           18243.8242, -20871.8770,   -613.3749,  29428.8516,   2848.4048,
           14793.5469, -20655.0449,  17427.4473, 103683.3516,  18960.1914,
            3352.0906, -10092.6934,  -6241.4009, -49024.4023, -21865.8691,
           11047.2852,   8124.2539,  43028.5938,   1128.1112,  -5002.6377,
           15102.1289,  36973.9102],
         [  -335.6750,  26110.5430, -12165.7168, -30832.6816, -27168.4590,
            -819.4692,  39876.8164,  15168.1631,    580.7433, -38118.0586,
            2300.4758, -11136.9131,   1757.2905,  36699.8711, -14142.8975,
           10851.8145,  -3470.3494,  10684.2744, 102233.7891,  67385.9766,
          -36979.7773,   2593.4714, -16269.5947, -20040.5098, -26361.3340,
           31775.8262,  12068.9570,  41030.6211,  14284.7461,  -1644.3228,
           37158.6445,  62502.1406]]], grad_fn=<AddBackward0>)
### b: tensor([[[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan]]],
       grad_fn=<IndexSelectBackward>)
### b: tensor([[[nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         ...,
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan]]], grad_fn=<IndexSelectBackward>)
tensor([[[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan]]],
       grad_fn=<AddBackward0>)
Traceback (most recent call last):
  File "main.py", line 89, in <module>
    main()
  File "main.py", line 85, in main
    model_trained = train(dataset, config,  device)
  File "main.py", line 48, in train
    loss, timing_loss, choice_loss  = model(arr_b.float(), arr_c.float(), arr_delta_time.float(), event_data, non_event_data, estimate_length, choice_data_dict)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 195, in forward
    event_choice_loss = self.choice_net(mat_b, mat_c, choice_data_dict, self.s_year, self.e_year)*1000
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 350, in forward
    choice_l = F.binary_cross_entropy(torch.sigmoid(logits_i), true_tar_idxs_i)  # inputs are both (N_i_2, N_i_1)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/functional.py", line 2759, in binary_cross_entropy
    return torch._C._nn.binary_cross_entropy(input, target, weight, reduction_enum)
RuntimeError: all elements of input should be between 0 and 1