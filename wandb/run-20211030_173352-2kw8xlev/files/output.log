
CUDA availability: True
#### arr_b: tensor([[[ 2.7240e+05,  7.8541e+04,  3.7003e+04,  1.4523e+00,  4.7520e-01,
           2.6725e-02,  1.0571e-01,  5.3577e-02,  2.5035e-01,  2.8833e-01,
           4.1589e+00,  2.3390e-01,  1.1715e-03,  9.3420e-02],
         [ 3.0401e+05,  8.8540e+04,  3.7003e+04,  1.6462e+00,  4.7590e-01,
           2.6982e-02,  1.0630e-01,  5.3577e-02,  2.5035e-01,  2.9124e-01,
           4.2011e+00,  2.3820e-01,  1.2731e-01,  1.1604e-01],
         [ 3.5594e+05,  9.9820e+04,  3.7003e+04,  1.8020e+00,  4.9178e-01,
           2.6117e-02,  1.0038e-01,  5.3577e-02,  2.5035e-01,  2.8044e-01,
           4.5021e+00,  2.3909e-01,  1.2740e-01,  1.7079e-01],
         [ 4.0520e+05,  1.1083e+05,  3.7003e+04,  2.1267e+00,  4.9796e-01,
           2.6449e-02,  1.0124e-01,  5.3577e-02,  2.5035e-01,  2.7352e-01,
           4.7412e+00,  2.5183e-01,  1.1032e-01,  1.3841e-01],
         [ 4.3701e+05,  1.2805e+05,  8.1950e+03,  1.9541e+00,  4.6066e-01,
           2.9141e-02,  9.1566e-02,  1.8753e-02,  6.3998e-02,  2.9302e-01,
           3.9870e+00,  2.5222e-01,  1.5536e-01,  7.8495e-02],
         [ 4.9502e+05,  1.2568e+05,  9.0820e+03,  1.6745e+00,  4.7045e-01,
           2.8540e-02,  8.5127e-02,  1.8347e-02,  7.2263e-02,  2.5389e-01,
           4.2478e+00,  2.5770e-01, -1.8524e-02,  1.3276e-01],
         [ 5.7524e+05,  1.3068e+05,  8.9100e+03,  1.2895e+00,  4.8572e-01,
           2.6307e-02,  8.2059e-02,  1.5489e-02,  6.8179e-02,  2.2718e-01,
           4.3859e+00,  2.3754e-01,  3.9832e-02,  1.6206e-01],
         [ 6.4748e+05,  1.3358e+05,  1.2664e+04,  1.3397e+00,  4.7093e-01,
           2.4076e-02,  8.2445e-02,  1.9559e-02,  9.4801e-02,  2.0631e-01,
           3.8510e+00,  1.9688e-01,  2.2191e-02,  1.2558e-01],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 7.9534e+05,  1.6972e+05,  1.5747e+04,  1.3049e+00,  6.4641e-01,
           2.8250e-02,  9.7940e-02,  1.9799e-02,  9.2783e-02,  2.1339e-01,
           4.4489e+00,  1.9443e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 7.8182e+05,  1.5578e+05,  7.2260e+04,  1.0536e+00,  6.5257e-01,
           1.4349e-02,  8.8527e-02,  9.2426e-02,  4.6387e-01,  1.9925e-01,
           4.3498e+00,  9.5642e-02,  1.1715e-03,  9.3420e-02],
         [ 7.5122e+05,  1.4906e+05,  7.8958e+04,  1.0963e+00,  6.3715e-01,
           1.6803e-02,  8.8142e-02,  1.0511e-01,  5.2971e-01,  1.9842e-01,
           4.0243e+00,  1.0613e-01, -4.3119e-02, -3.9142e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 6.4835e+05,  1.4616e+05,  9.0208e+04,  1.1943e+00,  5.6294e-01,
           2.3668e-02,  1.0239e-01,  1.3913e-01,  6.1720e-01,  2.2543e-01,
           2.8479e+00,  1.1973e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  9.4494e+04,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01, -3.5347e-01,  9.3420e-02]]])
### b: tensor([[[ 3.5495e+04, -8.5086e+04,  4.8270e+04, -5.4884e+03,  8.2649e+04,
           9.7367e+04,  3.0785e+04, -5.0312e+04,  2.6515e+04, -1.2982e+04,
           2.1768e+04, -1.7590e+04,  1.5271e+04, -4.5575e+04, -2.0405e+04,
           3.4385e+04,  2.9829e+04, -5.3174e+04, -2.4036e+04, -8.8045e+04,
          -5.5204e+04,  4.7179e+04,  7.1558e+04, -4.1302e+03, -2.7393e+04,
           4.4830e+04, -1.9374e+04,  1.4339e+04,  9.3784e+03, -8.8966e+03,
          -4.6908e+04, -1.0221e+05],
         [ 3.5495e+04, -8.5086e+04,  4.8270e+04, -5.4884e+03,  8.2649e+04,
           9.7367e+04,  3.0785e+04, -5.0312e+04,  2.6515e+04, -1.2982e+04,
           2.1768e+04, -1.7590e+04,  1.5271e+04, -4.5575e+04, -2.0405e+04,
           3.4385e+04,  2.9829e+04, -5.3174e+04, -2.4036e+04, -8.8045e+04,
          -5.5204e+04,  4.7179e+04,  7.1558e+04, -4.1302e+03, -2.7393e+04,
           4.4830e+04, -1.9374e+04,  1.4339e+04,  9.3784e+03, -8.8966e+03,
          -4.6908e+04, -1.0221e+05],
         [ 3.5495e+04, -8.5086e+04,  4.8270e+04, -5.4884e+03,  8.2649e+04,
           9.7367e+04,  3.0785e+04, -5.0312e+04,  2.6515e+04, -1.2982e+04,
           2.1768e+04, -1.7590e+04,  1.5271e+04, -4.5575e+04, -2.0405e+04,
           3.4385e+04,  2.9829e+04, -5.3174e+04, -2.4036e+04, -8.8045e+04,
          -5.5204e+04,  4.7179e+04,  7.1558e+04, -4.1302e+03, -2.7393e+04,
           4.4830e+04, -1.9374e+04,  1.4339e+04,  9.3784e+03, -8.8966e+03,
          -4.6908e+04, -1.0221e+05],
         [ 7.9977e+04, -3.3943e+04, -2.8926e+03,  3.0857e+03,  6.5167e+04,
           8.5543e+04,  9.2102e+04, -6.8437e+04,  3.9805e+04, -2.9643e+04,
           6.2038e+04,  2.9197e+04, -1.3294e+04, -7.0995e+04, -2.4193e+04,
           8.3526e+04, -1.0334e+04,  2.4902e+04, -2.2685e+04, -2.9727e+04,
          -5.3062e+04,  1.2174e+05,  1.5534e+05,  6.9269e+04,  2.4021e+04,
           4.3371e+03, -1.3110e+04,  7.5514e+04, -2.8389e+04,  5.2368e+04,
          -3.1334e+04, -4.1394e+04],
         [ 5.9083e+04, -8.1830e+04, -2.5848e+04,  5.4277e+03,  8.1186e+04,
           9.8892e+04,  5.2899e+04, -7.4397e+04,  4.7635e+03,  6.6823e+04,
           3.4495e+04,  1.1444e+04, -3.6974e+04, -7.6766e+03, -4.0813e+04,
           3.7137e+04,  4.4950e+04, -3.1938e+04, -5.7874e+03,  1.0690e+04,
          -5.4869e+04,  1.1908e+05,  1.1153e+05,  1.4320e+04, -2.4604e+04,
           5.4390e+04, -1.6620e+04,  2.8051e+04, -3.0948e+04,  3.2716e+04,
          -4.6990e+03, -1.0478e+05],
         [ 5.9083e+04, -8.1830e+04, -2.5848e+04,  5.4277e+03,  8.1186e+04,
           9.8892e+04,  5.2899e+04, -7.4397e+04,  4.7635e+03,  6.6823e+04,
           3.4495e+04,  1.1444e+04, -3.6974e+04, -7.6766e+03, -4.0813e+04,
           3.7137e+04,  4.4950e+04, -3.1938e+04, -5.7874e+03,  1.0690e+04,
          -5.4869e+04,  1.1908e+05,  1.1153e+05,  1.4320e+04, -2.4604e+04,
           5.4390e+04, -1.6620e+04,  2.8051e+04, -3.0948e+04,  3.2716e+04,
          -4.6990e+03, -1.0478e+05],
         [ 5.9083e+04, -8.1830e+04, -2.5848e+04,  5.4277e+03,  8.1186e+04,
           9.8892e+04,  5.2899e+04, -7.4397e+04,  4.7635e+03,  6.6823e+04,
           3.4495e+04,  1.1444e+04, -3.6974e+04, -7.6766e+03, -4.0813e+04,
           3.7137e+04,  4.4950e+04, -3.1938e+04, -5.7874e+03,  1.0690e+04,
          -5.4869e+04,  1.1908e+05,  1.1153e+05,  1.4320e+04, -2.4604e+04,
           5.4390e+04, -1.6620e+04,  2.8051e+04, -3.0948e+04,  3.2716e+04,
          -4.6990e+03, -1.0478e+05],
         [ 4.8929e+04, -6.0514e+04,  1.0755e+04, -3.3427e+03,  7.3544e+04,
           4.6654e+04,  9.6877e+04, -4.3123e+04,  3.2521e+04,  7.1537e+04,
           1.5146e+04,  3.3452e+04, -4.5664e+04,  1.2329e+04, -4.5868e+04,
           4.2735e+04, -6.8950e+03, -2.1358e+04, -1.1441e+04,  2.8268e+04,
          -6.9108e+04,  9.3113e+04,  1.0303e+05,  4.2827e+04,  1.2836e+04,
           7.2037e+01, -2.7330e+04,  1.9433e+04, -6.9826e+04,  2.1606e+04,
          -2.9850e+04, -7.8312e+04],
         [ 4.8929e+04, -6.0514e+04,  1.0755e+04, -3.3427e+03,  7.3544e+04,
           4.6654e+04,  9.6877e+04, -4.3123e+04,  3.2521e+04,  7.1537e+04,
           1.5146e+04,  3.3452e+04, -4.5664e+04,  1.2329e+04, -4.5868e+04,
           4.2735e+04, -6.8950e+03, -2.1358e+04, -1.1441e+04,  2.8268e+04,
          -6.9108e+04,  9.3113e+04,  1.0303e+05,  4.2827e+04,  1.2836e+04,
           7.2037e+01, -2.7330e+04,  1.9433e+04, -6.9826e+04,  2.1606e+04,
          -2.9850e+04, -7.8312e+04],
         [ 6.6124e+04, -6.0872e+04, -2.8169e+04, -6.1266e+03,  8.1660e+04,
           9.3881e+04,  5.9038e+04, -7.9673e+04, -2.6087e+03,  4.3362e+04,
           3.7054e+04,  1.6049e+04, -3.8721e+04, -1.0423e+04, -3.9542e+04,
           5.1943e+04,  3.8372e+04, -2.5960e+04, -1.0656e+03, -1.8375e+04,
          -5.4599e+04,  1.0287e+05,  8.0350e+04,  1.6217e+04, -3.4840e+04,
           4.4558e+04, -1.8025e+04,  1.6307e+04, -3.0919e+04, -7.1407e+02,
          -7.4930e+03, -9.1997e+04]]], grad_fn=<IndexSelectBackward>)
### b: tensor([[[ 107066.8359, -119469.6250,  -13991.4268,  ...,    1271.8668,
           -24568.5586,  -47855.2500],
         [  58135.9336,  -17164.8320,   14879.7207,  ...,   20093.1250,
           -12958.3418,  -44860.0312],
         [  35494.8242,  -85085.7422,   48270.1992,  ...,   -8896.6250,
           -46907.5078, -102212.7266],
         ...,
         [  25298.5566,  -65659.8984,  -14882.1006,  ...,   43822.0039,
            -3850.2927,  -84030.5703],
         [  66124.0391,  -60871.5547,  -28168.9004,  ...,    -714.0678,
            -7492.9570,  -91996.7344],
         [  38060.9023, -120404.1562,   45201.9219,  ...,   79406.1328,
           -89872.3750, -227558.7344]]], grad_fn=<IndexSelectBackward>)
#### arr_b: tensor([[[ 2.7240e+05,  7.8541e+04,  3.7003e+04,  1.4523e+00,  4.7520e-01,
           2.6725e-02,  1.0571e-01,  5.3577e-02,  2.5035e-01,  2.8833e-01,
           4.1589e+00,  2.3390e-01,  1.1715e-03,  9.3420e-02],
         [ 3.0401e+05,  8.8540e+04,  3.7003e+04,  1.6462e+00,  4.7590e-01,
           2.6982e-02,  1.0630e-01,  5.3577e-02,  2.5035e-01,  2.9124e-01,
           4.2011e+00,  2.3820e-01,  1.2731e-01,  1.1604e-01],
         [ 3.5594e+05,  9.9820e+04,  3.7003e+04,  1.8020e+00,  4.9178e-01,
           2.6117e-02,  1.0038e-01,  5.3577e-02,  2.5035e-01,  2.8044e-01,
           4.5021e+00,  2.3909e-01,  1.2740e-01,  1.7079e-01],
         [ 4.0520e+05,  1.1083e+05,  3.7003e+04,  2.1267e+00,  4.9796e-01,
           2.6449e-02,  1.0124e-01,  5.3577e-02,  2.5035e-01,  2.7352e-01,
           4.7412e+00,  2.5183e-01,  1.1032e-01,  1.3841e-01],
         [ 4.3701e+05,  1.2805e+05,  8.1950e+03,  1.9541e+00,  4.6066e-01,
           2.9141e-02,  9.1566e-02,  1.8753e-02,  6.3998e-02,  2.9302e-01,
           3.9870e+00,  2.5222e-01,  1.5536e-01,  7.8495e-02],
         [ 4.9502e+05,  1.2568e+05,  9.0820e+03,  1.6745e+00,  4.7045e-01,
           2.8540e-02,  8.5127e-02,  1.8347e-02,  7.2263e-02,  2.5389e-01,
           4.2478e+00,  2.5770e-01, -1.8524e-02,  1.3276e-01],
         [ 5.7524e+05,  1.3068e+05,  8.9100e+03,  1.2895e+00,  4.8572e-01,
           2.6307e-02,  8.2059e-02,  1.5489e-02,  6.8179e-02,  2.2718e-01,
           4.3859e+00,  2.3754e-01,  3.9832e-02,  1.6206e-01],
         [ 6.4748e+05,  1.3358e+05,  1.2664e+04,  1.3397e+00,  4.7093e-01,
           2.4076e-02,  8.2445e-02,  1.9559e-02,  9.4801e-02,  2.0631e-01,
           3.8510e+00,  1.9688e-01,  2.2191e-02,  1.2558e-01],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 7.9534e+05,  1.6972e+05,  1.5747e+04,  1.3049e+00,  6.4641e-01,
           2.8250e-02,  9.7940e-02,  1.9799e-02,  9.2783e-02,  2.1339e-01,
           4.4489e+00,  1.9443e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 7.8182e+05,  1.5578e+05,  7.2260e+04,  1.0536e+00,  6.5257e-01,
           1.4349e-02,  8.8527e-02,  9.2426e-02,  4.6387e-01,  1.9925e-01,
           4.3498e+00,  9.5642e-02,  1.1715e-03,  9.3420e-02],
         [ 7.5122e+05,  1.4906e+05,  7.8958e+04,  1.0963e+00,  6.3715e-01,
           1.6803e-02,  8.8142e-02,  1.0511e-01,  5.2971e-01,  1.9842e-01,
           4.0243e+00,  1.0613e-01, -4.3119e-02, -3.9142e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  1.1585e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  1.1715e-03,  9.3420e-02],
         [ 6.4835e+05,  1.4616e+05,  9.0208e+04,  1.1943e+00,  5.6294e-01,
           2.3668e-02,  1.0239e-01,  1.3913e-01,  6.1720e-01,  2.2543e-01,
           2.8479e+00,  1.1973e-01,  1.1715e-03,  9.3420e-02],
         [ 4.9912e+05,  9.4494e+04,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01, -3.5347e-01,  9.3420e-02],
         [ 4.9912e+05,  1.0330e+05,  3.7003e+04,  1.4945e+00,  5.2731e-01,
           2.2999e-02,  1.0579e-01,  5.3577e-02,  2.5035e-01,  2.5883e-01,
           4.1455e+00,  2.0194e-01,  9.3159e-02,  9.3420e-02]]])
### b: tensor([[[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan],
         [nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
          nan, nan, nan, nan, nan, nan, nan, nan, nan]]],
       grad_fn=<IndexSelectBackward>)
### b: tensor([[[nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         ...,
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan],
         [nan, nan, nan,  ..., nan, nan, nan]]], grad_fn=<IndexSelectBackward>)
Traceback (most recent call last):
  File "main.py", line 89, in <module>
    main()
  File "main.py", line 85, in main
    model_trained = train(dataset, config,  device)
  File "main.py", line 48, in train
    loss, timing_loss, choice_loss  = model(arr_b.float(), arr_c.float(), arr_delta_time.float(), event_data, non_event_data, estimate_length, choice_data_dict)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 195, in forward
    event_choice_loss = self.choice_net(mat_b, mat_c, choice_data_dict, self.s_year, self.e_year)*1000
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/modules/module.py", line 889, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/home/dalab5/Projects/MA_packed/model.py", line 350, in forward
    choice_l = F.binary_cross_entropy(torch.sigmoid(logits_i), true_tar_idxs_i)  # inputs are both (N_i_2, N_i_1)
  File "/home/dalab5/miniconda3/envs/GNN/lib/python3.8/site-packages/torch/nn/functional.py", line 2759, in binary_cross_entropy
    return torch._C._nn.binary_cross_entropy(input, target, weight, reduction_enum)
RuntimeError: all elements of input should be between 0 and 1